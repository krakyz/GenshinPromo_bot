"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å –∞–¥–º–∏–Ω–∫–∏ —Å —Ä–∞–±–æ—á–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏–π
"""
import asyncio
import logging
import os
import hashlib
from typing import Optional, Dict, Any
from datetime import datetime

from aiogram import Router, F, Bot
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, PhotoSize, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.exceptions import TelegramBadRequest

from database import db
from models import CodeModel
from filters.admin_filter import AdminFilter
from keyboards.inline import (
    get_admin_keyboard, get_admin_stats_keyboard, get_admin_codes_keyboard,
    get_admin_users_keyboard, get_database_admin_keyboard, get_admin_back_keyboard,
    get_admin_expire_codes_keyboard, get_expire_code_click_keyboard,
    get_reset_db_click_keyboard
)
from utils.date_utils import DateTimeUtils, parse_expiry_date, format_expiry_date
from utils.broadcast import broadcast_new_code, broadcast_custom_post, update_expired_code_messages

logger = logging.getLogger(__name__)
router = Router()


class AdminStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    waiting_for_code_data = State()
    waiting_for_code_to_expire = State()
    waiting_for_custom_post_data = State()
    waiting_for_custom_post_image = State()
    waiting_for_db_reset_confirmation = State()


def get_content_hash(text: str) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å —Ö–µ—à –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è"""
    return hashlib.md5(text.encode()).hexdigest()


async def safe_edit_message(callback: CallbackQuery, new_text: str, reply_markup=None, parse_mode="HTML"):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        current_text = callback.message.text or callback.message.caption or ""
        
        current_hash = get_content_hash(current_text)
        new_hash = get_content_hash(new_text)
        
        if current_hash == new_hash:
            await callback.answer("‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã", show_alert=False)
            return True
        
        await callback.message.edit_text(
            new_text,
            parse_mode=parse_mode,
            reply_markup=reply_markup
        )
        await callback.answer("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ", show_alert=False)
        return True
        
    except TelegramBadRequest as e:
        if "message is not modified" in str(e):
            await callback.answer("‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã", show_alert=False)
            return True
        else:
            logger.error(f"–û—à–∏–±–∫–∞ Telegram –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", show_alert=True)
            return False
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", show_alert=True)
        return False


# –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–¥–º–∏–Ω–∫–∏
@router.message(Command("admin"), AdminFilter())
async def admin_panel(message: Message):
    """–ì–ª–∞–≤–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
    admin_text = """üîß <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –±–æ—Ç–∞ Genshin Impact –∫–æ–¥–æ–≤</b>

üëã –ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!

üìä <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</b>
‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–º–æ-–∫–æ–¥
‚Ä¢ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ç–µ–∫—à–∏–π –∫–æ–¥
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞
‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–¥—ã
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
‚Ä¢ –°–æ–∑–¥–∞—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"""
    
    await message.answer(admin_text, parse_mode="HTML", reply_markup=get_admin_keyboard())


@router.callback_query(F.data == "admin_add_code", AdminFilter())
async def add_code_callback(callback: CallbackQuery, state: FSMContext):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–¥–∞"""
    await callback.message.edit_text(
        """‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º–æ-–∫–æ–¥–∞</b>

–û—Ç–ø—Ä–∞–≤—å –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–º–æ-–∫–æ–¥–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

<code>–ö–û–î
–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞
–ù–∞–≥—Ä–∞–¥—ã
–î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</code>

<b>–ü—Ä–∏–º–µ—Ä –±–µ–∑ –¥–∞—Ç—ã –∏—Å—Ç–µ—á–µ–Ω–∏—è:</b>
<code>GENSHINGIFT
–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ–º–æ-–∫–æ–¥
50 –ü—Ä–∏–º–æ–≥–µ–º–æ–≤ + 3 –ö–Ω–∏–≥–∏ –≥–µ—Ä–æ—è</code>

<b>–ü—Ä–∏–º–µ—Ä —Å –¥–∞—Ç–æ–π –∏—Å—Ç–µ—á–µ–Ω–∏—è:</b>
<code>LIMITEDCODE
–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø—Ä–æ–º–æ-–∫–æ–¥
100 –ü—Ä–∏–º–æ–≥–µ–º–æ–≤ + 5 –ö–Ω–∏–≥ –≥–µ—Ä–æ—è
15.10.2025 23:59</code>

–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã""",
        parse_mode="HTML",
        reply_markup=get_admin_back_keyboard()
    )
    
    await state.set_state(AdminStates.waiting_for_code_data)
    await callback.answer()


@router.message(AdminStates.waiting_for_code_data, AdminFilter())
async def process_new_code(message: Message, state: FSMContext, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –∫–æ–¥–∞ –æ—Ç –∞–¥–º–∏–Ω–∞"""
    if message.text == "/cancel":
        await message.answer("‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        await state.clear()
        return
    
    try:
        lines = message.text.strip().split('\n')
        
        if len(lines) < 3:
            await message.answer(
                "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!</b>\n\n–ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 3 —Å—Ç—Ä–æ–∫–∏:\n1. –ö–æ–¥\n2. –û–ø–∏—Å–∞–Ω–∏–µ\n3. –ù–∞–≥—Ä–∞–¥—ã\n4. –î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)",
                parse_mode="HTML"
            )
            return
        
        code = lines[0].strip().upper()
        description = lines[1].strip()
        rewards = lines[2].strip()
        expires_date = None
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–¥–∞
        if not code or len(code) < 3:
            await message.answer("‚ùå <b>–ö–æ–¥ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π!</b>\n\n–ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞.", parse_mode="HTML")
            return
        
        if len(code) > 20:
            await message.answer("‚ùå <b>–ö–æ–¥ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π!</b>\n\n–ö–æ–¥ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª–µ–µ 20 —Å–∏–º–≤–æ–ª–æ–≤.", parse_mode="HTML")
            return
        
        # –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞—Ç—ã
        if len(lines) > 3 and lines[3].strip():
            expires_date = parse_expiry_date(lines[3])
            if not expires_date:
                await message.answer(
                    "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã!</b>\n\n–ü—Ä–∏–º–µ—Ä—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤:\n‚Ä¢ 15.10.2025 (–¥–æ 23:59)\n‚Ä¢ 15.10.2025 15:30 (–¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)",
                    parse_mode="HTML"
                )
                return
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–æ–¥–∞
        new_code = CodeModel(
            code=code,
            description=description,
            rewards=rewards,
            expires_date=expires_date
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        code_id = await db.add_code(new_code)
        
        if code_id:
            # –û–±–Ω–æ–≤–ª—è–µ–º ID –≤ –æ–±—ä–µ–∫—Ç–µ
            new_code.id = code_id
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            confirmation_text = f"""‚úÖ <b>–ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!</b>

üî• <b>–ö–æ–¥:</b> <code>{code}</code>
üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {description}
üíé <b>–ù–∞–≥—Ä–∞–¥—ã:</b> {rewards}"""
            
            if expires_date:
                confirmation_text += f"\n‚è∞ <b>–ò—Å—Ç–µ–∫–∞–µ—Ç:</b> {format_expiry_date(expires_date)}"
            
            confirmation_text += "\n\nüöÄ <b>–ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º...</b>"
            
            await message.answer(confirmation_text, parse_mode="HTML")
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—Å—ã–ª–∫—É
            stats = await broadcast_new_code(bot, new_code)
            
            # –û—Ç—á–µ—Ç –æ —Ä–∞—Å—Å—ã–ª–∫–µ
            await message.answer(
                f"""üì¨ <b>–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>

üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b>
‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {stats['sent']}
‚Ä¢ –û—à–∏–±–æ–∫: {stats['failed']}
‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: {stats['blocked']}""",
                parse_mode="HTML"
            )
            
        else:
            await message.answer(
                f"‚ùå <b>–û—à–∏–±–∫–∞!</b>\n\n–ö–æ–¥ <code>{code}</code> —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.",
                parse_mode="HTML"
            )
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–¥–∞: {e}")
        await message.answer(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–¥–∞</b>\n\n–ü—Ä–æ–≤–µ—Ä—å —Ñ–æ—Ä–º–∞—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.",
            parse_mode="HTML"
        )
    
    await state.clear()


@router.callback_query(F.data == "admin_expire_code", AdminFilter())
async def expire_code_callback(callback: CallbackQuery):
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–¥–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    codes = await db.get_active_codes()
    
    if not codes:
        await callback.message.edit_text(
            "ü§∑‚Äç‚ôÇÔ∏è <b>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–¥–æ–≤ –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏</b>\n\n–î–æ–±–∞–≤—å –Ω–æ–≤—ã–µ –∫–æ–¥—ã —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∫–∏.",
            parse_mode="HTML",
            reply_markup=get_admin_back_keyboard()
        )
        await callback.answer()
        return
    
    await callback.message.edit_text(
        f"""‚ùå <b>–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ-–∫–æ–¥–∞</b>

<b>–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–¥–æ–≤: {len(codes)}</b>

üí° <i>–ù–∞–∂–º–∏ –Ω–∞ –∫–æ–¥ —Ç—Ä–∏–∂–¥—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏</i>

–í—ã–±–µ—Ä–∏ –∫–æ–¥ –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏:""",
        parse_mode="HTML",
        reply_markup=get_admin_expire_codes_keyboard(codes)
    )
    
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞ –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–¥–∞
@router.callback_query(lambda c: c.data and c.data.startswith("expire_code_"), AdminFilter())
async def expire_code_click_handler(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–æ–¥–∞–º (—Ç—Ä–æ–π–Ω–æ–π –∫–ª–∏–∫ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏)"""
    parts = callback.data.split("_")
    code = parts[2]
    click_count = int(parts[3]) if len(parts) > 3 else 1
    
    if click_count == 1:
        message_text = f"""‚ö†Ô∏è <b>–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–¥–∞: {code}</b>

üî∏ <i>–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –µ—â–µ 2 —Ä–∞–∑–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</i>

üóëÔ∏è <b>–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
‚Ä¢ –£–¥–∞–ª–∏—Ç –∫–æ–¥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –û–±–Ω–æ–≤–∏—Ç –≤—Å–µ —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
‚Ä¢ –°–¥–µ–ª–∞–µ—Ç –∫–æ–¥ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º –Ω–∞–≤—Å–µ–≥–¥–∞"""
    
    elif click_count == 2:
        message_text = f"""‚ö†Ô∏è <b>–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–¥–∞: {code}</b>

üî∏üî∏ <i>–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –µ—â–µ 1 —Ä–∞–∑ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</i>

üóëÔ∏è <b>–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!</b>
‚Ä¢ –ö–æ–¥ –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω
‚Ä¢ –í—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±–Ω–æ–≤—è—Ç—Å—è
‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ"""
    
    elif click_count >= 3:
        message_text = f"""‚ùå <b>–í–ù–ò–ú–ê–ù–ò–ï!</b>

–ö–æ–¥ <code>{code}</code> –≥–æ—Ç–æ–≤ –∫ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏!

üî∏üî∏üî∏ <i>–ù–∞–∂–º–∏ –∫—Ä–∞—Å–Ω—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è</i>"""
    
    await callback.message.edit_text(
        message_text,
        parse_mode="HTML",
        reply_markup=get_expire_code_click_keyboard(code, click_count)
    )
    
    await callback.answer("üî∏ –ö–ª–∏–∫ –∑–∞—Å—á–∏—Ç–∞–Ω" if click_count < 3 else "‚ö†Ô∏è –ì–æ—Ç–æ–≤ –∫ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏!")


@router.callback_query(lambda c: c.data and c.data.startswith("confirm_expire_"), AdminFilter())
async def confirm_expire_code(callback: CallbackQuery, bot: Bot):
    """–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–¥–∞ –ø–æ—Å–ª–µ —Ç—Ä–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞"""
    code = callback.data.replace("confirm_expire_", "")
    
    try:
        logger.info(f"–ê–¥–º–∏–Ω {callback.from_user.id} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∫–æ–¥ {code}")
        
        # –ü–ï–†–í–´–ú –î–ï–õ–û–ú –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        await callback.message.edit_text(
            f"üîÑ <b>–û–±–Ω–æ–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...</b>\n\n–ö–æ–¥: <code>{code}</code>",
            parse_mode="HTML"
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —ç—Ç–∏–º –∫–æ–¥–æ–º
        await update_expired_code_messages(bot, code)
        
        await callback.message.edit_text(
            f"üóëÔ∏è <b>–£–¥–∞–ª—è—é –∫–æ–¥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...</b>\n\n–ö–æ–¥: <code>{code}</code>",
            parse_mode="HTML"
        )
        
        # –¢–æ–ª—å–∫–æ –ü–û–°–õ–ï –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —É–¥–∞–ª—è–µ–º –∫–æ–¥
        success = await db.expire_code(code)
        
        if success:
            await callback.message.edit_text(
                f"""‚úÖ <b>–ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</b>

üóëÔ∏è <b>–ö–æ–¥:</b> <code>{code}</code>
üîÑ <b>–°—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:</b> –û–±–Ω–æ–≤–ª–µ–Ω—ã
üìä <b>–°—Ç–∞—Ç—É—Å:</b> –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö""",
                parse_mode="HTML",
                reply_markup=get_admin_back_keyboard()
            )
            
            logger.info(f"–ö–æ–¥ {code} —É—Å–ø–µ—à–Ω–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {callback.from_user.id}")
        else:
            await callback.message.edit_text(
                f"‚ùå <b>–û—à–∏–±–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏!</b>\n\n–ö–æ–¥ <code>{code}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.",
                parse_mode="HTML",
                reply_markup=get_admin_back_keyboard()
            )
    
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–¥–∞ {code}: {e}")
        await callback.message.edit_text(
            f"‚ùå <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞!</b>\n\n–ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ <code>{code}</code>.\n–î–µ—Ç–∞–ª–∏: {str(e)}",
            parse_mode="HTML",
            reply_markup=get_admin_back_keyboard()
        )
    
    await callback.answer()


# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
@router.callback_query(F.data == "admin_stats", AdminFilter())
async def admin_stats_callback(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞"""
    try:
        active_codes = await db.get_active_codes()
        total_users, subscribers_count, _ = await db.get_user_stats()
        
        stats_text = f"""üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>

üéÅ <b>–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ-–∫–æ–¥—ã:</b> {len(active_codes)}
üë• <b>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {total_users}
üîî <b>–ü–æ–¥–ø–∏—Å—á–∏–∫–∏:</b> {subscribers_count}
üìÖ <b>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</b> {datetime.now().strftime('%d.%m.%Y %H:%M –ú–°–ö')}

üí° <i>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–¥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π —Ä–∞–∑–¥–µ–ª "–ê–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–¥—ã"</i>"""
        
        await safe_edit_message(callback, stats_text, get_admin_stats_keyboard())
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", show_alert=True)


# –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–¥—ã
@router.callback_query(F.data == "admin_active_codes", AdminFilter())
async def admin_active_codes_callback(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–¥—ã"""
    try:
        codes = await db.get_active_codes()
        
        if not codes:
            codes_text = """ü§∑‚Äç‚ôÇÔ∏è <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ-–∫–æ–¥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</b>

–î–æ–±–∞–≤—å –Ω–æ–≤—ã–π –∫–æ–¥ —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∫–∏."""
        else:
            codes_text = f"üìã <b>–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ-–∫–æ–¥—ã ({len(codes)}):</b>\n\n"
            
            for code in codes:
                created = code.created_at.strftime('%d.%m.%Y %H:%M –ú–°–ö') if code.created_at else 'N/A'
                expires = format_expiry_date(code.expires_date) if code.expires_date else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
                
                codes_text += f"""üî• <b>{code.code}</b>
üìù {code.description or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üíé {code.rewards or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
‚è∞ –î–æ–±–∞–≤–ª–µ–Ω: {created}
‚åõ –ò—Å—Ç–µ–∫–∞–µ—Ç: {expires}
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

"""
        
        await safe_edit_message(callback, codes_text, get_admin_codes_keyboard())
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–¥–æ–≤: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–æ–≤", show_alert=True)


# –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö, –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ—Å—Ç—ã...)
@router.callback_query(F.data == "admin_users", AdminFilter())
async def admin_users_callback(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö"""
    try:
        total_users, subscribers_count, recent_users = await db.get_user_stats()
        
        users_text = f"""üë• <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö</b>

üìà <b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}
‚Ä¢ –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {subscribers_count}
‚Ä¢ –û—Ç–ø–∏—Å–∞–≤—à–∏—Ö—Å—è: {total_users - subscribers_count}
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–¥–ø–∏—Å–æ–∫: {round(subscribers_count/total_users*100, 1) if total_users > 0 else 0}%

üë§ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>"""
        
        if recent_users:
            for user in recent_users:
                name = user['first_name'] or '–ë–µ–∑ –∏–º–µ–Ω–∏'
                username = f"@{user['username']}" if user['username'] else '–ù–µ—Ç username'
                status = "üîî" if user['is_subscribed'] else "üîï"
                joined = user['joined_at'].strftime('%d.%m.%Y') if user['joined_at'] else 'N/A'
                
                users_text += f"\n\n{status} <b>{name}</b> ({username})"
                users_text += f"\n   ID: <code>{user['user_id']}</code>"
                users_text += f"\n   –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è: {joined}"
        else:
            users_text += "\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        
        await safe_edit_message(callback, users_text, get_admin_users_keyboard())
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", show_alert=True)


@router.callback_query(F.data == "admin_back", AdminFilter())
async def admin_back_callback(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞"""
    await state.clear()
    
    admin_text = """üîß <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –±–æ—Ç–∞ Genshin Impact –∫–æ–¥–æ–≤</b>

üëã –ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!

üìä <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</b>
‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–º–æ-–∫–æ–¥
‚Ä¢ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ç–µ–∫—à–∏–π –∫–æ–¥
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞
‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–¥—ã
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
‚Ä¢ –°–æ–∑–¥–∞—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π –ø–æ—Å—Ç
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"""
    
    await safe_edit_message(callback, admin_text, get_admin_keyboard())


@router.message(Command("cancel"), AdminFilter())
async def cancel_admin_action(message: Message, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –∞–¥–º–∏–Ω-–¥–µ–π—Å—Ç–≤–∏—è"""
    await state.clear()
    await message.answer("‚ùå <b>–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ</b>", parse_mode="HTML")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å—Ç–µ–∫—à–∏—Ö –∫–æ–¥–æ–≤
@router.callback_query(F.data == "expired_code")
async def expired_code_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏—Å—Ç–µ–∫—à–∏–µ –∫–æ–¥—ã"""
    await callback.answer(
        "‚åõ –≠—Ç–æ—Ç –ø—Ä–æ–º–æ-–∫–æ–¥ –±–æ–ª—å—à–µ –Ω–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤—ã–º–∏ –∫–æ–¥–∞–º–∏!",
        show_alert=True
    )