from aiogram import Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from database import db
from models import UserModel
from keyboards.inline import get_subscription_keyboard, get_code_activation_keyboard, get_all_codes_keyboard
import logging

logger = logging.getLogger(__name__)
router = Router()

@router.message(CommandStart())
async def start_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = UserModel(
        user_id=message.from_user.id,
        username=message.from_user.username,
        first_name=message.from_user.first_name
    )
    
    await db.add_user(user)
    
    welcome_text = f"""
üéÆ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ø—Ä–æ–º–æ-–∫–æ–¥–æ–≤ Genshin Impact!</b>

–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–º–æ-–∫–æ–¥–∞ –¥–ª—è Genshin Impact!

üîî <b>–ß—Ç–æ —è —É–º–µ—é:</b>
‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–º–æ-–∫–æ–¥–∞—Ö
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—é –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–¥—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
‚Ä¢ –ü–æ–º–æ–≥–∞—é —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

üì± <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/codes - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–¥—ã
/subscribe - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
/unsubscribe - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É

–£–¥–∞—á–∏ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏ –ø–æ –¢–µ–π–≤–∞—Ç—É! ‚ú®
"""
    
    await message.answer(
        welcome_text,
        parse_mode="HTML",
        reply_markup=get_subscription_keyboard()
    )

@router.message(Command("codes"))
@router.callback_query(lambda c: c.data == "view_all_codes")
async def codes_handler(update):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /codes - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–¥—ã –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º"""
    
    # –î–æ–±–∞–≤–∏–º –æ—Ç–ª–∞–¥–∫—É
    await db.debug_codes()
    
    codes = await db.get_active_codes()
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –∫–æ–¥–æ–≤: {len(codes)}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (—Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ callback)
    if isinstance(update, Message):
        message = update
        edit_message = False
    else:  # CallbackQuery
        message = update.message
        edit_message = True
        await update.answer()
    
    if not codes:
        text = (
            "ü§∑‚Äç‚ôÇÔ∏è <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ-–∫–æ–¥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</b>\n\n"
            "–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –Ω–æ–≤—ã—Ö –∫–æ–¥–∞—Ö –ø–µ—Ä–≤—ã–º!"
        )
        keyboard = get_subscription_keyboard()
        
        if edit_message:
            await message.edit_text(text, parse_mode="HTML", reply_markup=keyboard)
        else:
            await message.answer(text, parse_mode="HTML", reply_markup=keyboard)
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ –≤—Å–µ–º–∏ –∫–æ–¥–∞–º–∏
    codes_text = f"üéÅ <b>–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ-–∫–æ–¥—ã ({len(codes)}):</b>\n\n"
    
    for i, code in enumerate(codes, 1):
        codes_text += f"<b>{i}. {code.code}</b>\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—ã –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã
        if code.rewards:
            codes_text += f"üíé {code.rewards}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ
        if code.description and code.description != code.code:
            codes_text += f"üìù {code.description}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ä–æ–∫–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if code.expires_date:
            logger.info(f"–ö–æ–¥ {code.code} –∏–º–µ–µ—Ç expires_date: {code.expires_date}")
            codes_text += f"‚è∞ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {code.expires_date.strftime('%d.%m.%Y %H:%M')}\n"
        else:
            logger.info(f"–ö–æ–¥ {code.code} –ù–ï –∏–º–µ–µ—Ç expires_date")
        
        codes_text += "\n"
    
    codes_text += "üí° <i>–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –∫–æ–¥–æ–º –Ω–∏–∂–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏!</i>"
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ –≤—Å–µ–º–∏ –∫–æ–¥–∞–º–∏
    keyboard = get_all_codes_keyboard(codes)
    
    if edit_message:
        await message.edit_text(codes_text, parse_mode="HTML", reply_markup=keyboard)
    else:
        await message.answer(codes_text, parse_mode="HTML", reply_markup=keyboard)

@router.message(Command("help"))
async def help_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üìö <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É Genshin Impact –ø—Ä–æ–º–æ-–∫–æ–¥–æ–≤</b>

ü§ñ <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
/codes - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ-–∫–æ–¥—ã
/subscribe - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∫–æ–¥–∞—Ö
/unsubscribe - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üéÅ <b>–ö–∞–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ-–∫–æ–¥:</b>
1. –ü–æ–ª—É—á–∏ –∫–æ–¥ —á–µ—Ä–µ–∑ —ç—Ç–æ–≥–æ –±–æ—Ç–∞
2. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–æ–¥–∞
3. –í–æ–π–¥–∏ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç HoYoverse
4. –í—ã–±–µ—Ä–∏ —Å–µ—Ä–≤–µ—Ä –∏ –≤–≤–µ–¥–∏ –Ω–∏–∫–Ω–µ–π–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
5. –ü–æ–ª—É—á–∏ –Ω–∞–≥—Ä–∞–¥—ã –≤ –∏–≥—Ä–µ —á–µ—Ä–µ–∑ –ø–æ—á—Ç—É

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:</b>
‚Ä¢ –ö–∞–∂–¥—ã–π –∫–æ–¥ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
‚Ä¢ –ö–æ–¥—ã –∏–º–µ—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è
‚Ä¢ –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω—É–∂–µ–Ω Adventure Rank 10+

üì¢ <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>
–ü–æ–¥–ø–∏—à–∏—Å—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–º–æ-–∫–æ–¥–∞—Ö!

üéÆ –£–¥–∞—á–∏ –≤ Genshin Impact!
"""
    
    await message.answer(
        help_text,
        parse_mode="HTML",
        reply_markup=get_subscription_keyboard()
    )

@router.callback_query(lambda c: c.data == "subscribe")
async def subscribe_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    success = await db.subscribe_user(callback.from_user.id)
    
    if success:
        await callback.message.edit_text(
            "üîî <b>–û—Ç–ª–∏—á–Ω–æ!</b>\n\n"
            "–¢—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–º–æ-–∫–æ–¥–∞—Ö Genshin Impact!\n"
            "–¢–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º –∫–æ–¥–µ.",
            parse_mode="HTML",
            reply_markup=get_subscription_keyboard()
        )
    else:
        await callback.message.edit_text(
            "‚ùå <b>–û—à–∏–±–∫–∞</b>\n\n"
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.",
            parse_mode="HTML",
            reply_markup=get_subscription_keyboard()
        )
    
    await callback.answer()

@router.callback_query(lambda c: c.data == "unsubscribe")
async def unsubscribe_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    success = await db.unsubscribe_user(callback.from_user.id)
    
    if success:
        await callback.message.edit_text(
            "üîï <b>–ì–æ—Ç–æ–≤–æ!</b>\n\n"
            "–¢—ã –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–æ–º–æ-–∫–æ–¥–∞—Ö.\n"
            "–¢—ã –≤—Å–µ –µ—â–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–¥—ã –∫–æ–º–∞–Ω–¥–æ–π /codes",
            parse_mode="HTML",
            reply_markup=get_subscription_keyboard()
        )
    else:
        await callback.message.edit_text(
            "‚ùå <b>–û—à–∏–±–∫–∞</b>\n\n"
            "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.",
            parse_mode="HTML",
            reply_markup=get_subscription_keyboard()
        )
    
    await callback.answer()

@router.message(Command("subscribe"))
async def subscribe_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∏"""
    success = await db.subscribe_user(message.from_user.id)
    
    if success:
        await message.answer(
            "üîî <b>–û—Ç–ª–∏—á–Ω–æ!</b>\n\n"
            "–¢—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–º–æ-–∫–æ–¥–∞—Ö Genshin Impact!",
            parse_mode="HTML"
        )
    else:
        await message.answer(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.",
            parse_mode="HTML"
        )

@router.message(Command("unsubscribe"))
async def unsubscribe_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø–∏—Å–∫–∏"""
    success = await db.unsubscribe_user(message.from_user.id)
    
    if success:
        await message.answer(
            "üîï <b>–ì–æ—Ç–æ–≤–æ!</b>\n\n"
            "–¢—ã –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–æ–º–æ-–∫–æ–¥–∞—Ö.",
            parse_mode="HTML"
        )
    else:
        await message.answer(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.",
            parse_mode="HTML"
        )