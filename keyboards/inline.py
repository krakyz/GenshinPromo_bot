"""
–£–ª—É—á—à–µ–Ω–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–¥–æ–≤
"""
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from typing import List
from models import CodeModel


def get_code_activation_keyboard(code: str, is_expired: bool = False) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫–æ–π –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–¥–æ–≤"""
    inline_keyboard = []
    
    if not is_expired:
        # –ê–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        activation_url = f"https://genshin.hoyoverse.com/gift?code={code}"
        inline_keyboard.append([
            InlineKeyboardButton(
                text=f"üéÅ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å: {code}",
                url=activation_url
            )
        ])
    else:
        # –ù–µ–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∏—Å—Ç–µ–∫—à–µ–≥–æ –∫–æ–¥–∞
        inline_keyboard.append([
            InlineKeyboardButton(
                text=f"‚ùå –ö–æ–¥ –∏—Å—Ç–µ–∫: {code}",
                callback_data="expired_code"
            )
        ])
    
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–¥–æ–≤
    inline_keyboard.append([
        InlineKeyboardButton(text="üìã –í—Å–µ –∫–æ–¥—ã", callback_data="view_all_codes")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def get_all_codes_keyboard(codes):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–æ–¥–∞–º–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    inline_keyboard = []
    
    for code in codes:
        if code.is_active:
            inline_keyboard.append([
                InlineKeyboardButton(
                    text=f"üéÅ {code.code}",
                    callback_data=f"check_code_{code.code}"
                )
            ])
    
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)




def get_subscription_keyboard(is_subscribed: bool = False) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é)"""
    inline_keyboard = []
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
    if not is_subscribed:
        inline_keyboard.append([
            InlineKeyboardButton(text="üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", callback_data="subscribe")
        ])
    
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–¥–æ–≤ –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
    inline_keyboard.append([
        InlineKeyboardButton(text="üìã –í—Å–µ –∫–æ–¥—ã", callback_data="view_all_codes")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


# –ù–û–í–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
def get_code_confirmation_keyboard(code: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞
    """
    activation_url = f"https://genshin.hoyoverse.com/gift?code={code}"
    
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text=f"üåê –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥",
            url=activation_url
        )],
        [InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥", 
            callback_data="view_all_codes"
        )]
    ])


# –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
def get_admin_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–æ–¥", callback_data="admin_add_code"),
            InlineKeyboardButton(text="‚ùå –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥", callback_data="admin_expire_code")
        ],
        [
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats"),
            InlineKeyboardButton(text="üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–¥—ã", callback_data="admin_active_codes")
        ],
        [
            InlineKeyboardButton(text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="admin_users"),
            InlineKeyboardButton(text="üì¢ –†–µ–∫–ª–∞–º–∞", callback_data="admin_custom_post")
        ],
        [
            InlineKeyboardButton(text="üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", callback_data="admin_database")
        ]
    ])
    return keyboard


def get_admin_add_code_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")
        ]
    ])
    return keyboard


def get_admin_expire_code_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–¥–∞"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")
        ]
    ])
    return keyboard


def get_admin_custom_post_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")
        ]
    ])
    return keyboard


def get_admin_stats_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="admin_stats")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")
        ]
    ])
    return keyboard


def get_admin_codes_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–¥–æ–≤"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="admin_active_codes")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")
        ]
    ])
    return keyboard


def get_admin_users_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="admin_users")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")
        ]
    ])
    return keyboard


def get_codes_navigation_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–¥–æ–≤)"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìã –í—Å–µ –∫–æ–¥—ã", callback_data="view_all_codes")
        ]
    ])
    return keyboard


def get_database_admin_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üì• –°–∫–∞—á–∞—Ç—å –ë–î", callback_data="admin_download_db"),
            InlineKeyboardButton(text="üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –ë–î", callback_data="admin_reset_db")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")
        ]
    ])
    return keyboard


def get_custom_post_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ (—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–¥–æ–≤)"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìã –í—Å–µ –∫–æ–¥—ã", callback_data="view_all_codes")
        ]
    ])
    return keyboard


def get_custom_post_with_button_keyboard(button_text: str, button_url: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=button_text, url=button_url)
        ],
        [
            InlineKeyboardButton(text="üìã –í—Å–µ –∫–æ–¥—ã", callback_data="view_all_codes")
        ]
    ])
    return keyboard


# –ù–û–í–´–ï —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å —Ç—Ä–æ–π–Ω—ã–º –∫–ª–∏–∫–æ–º

def get_admin_expire_codes_keyboard(codes: List[CodeModel]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∫–æ–¥–æ–≤ –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
    inline_keyboard = []
    
    for code in codes:
        inline_keyboard.append([
            InlineKeyboardButton(
                text=f"üî• {code.code}",
                callback_data=f"expire_code_{code.code}_1"
            )
        ])
    
    inline_keyboard.append([
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


def get_expire_code_click_keyboard(code: str, click_count: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –∫–ª–∏–∫–æ–≤ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
    
    if click_count == 1:
        button_text = f"üî∏ {code} (–Ω–∞–∂–º–∏ –µ—â–µ 2 —Ä–∞–∑–∞)"
        callback_data = f"expire_code_{code}_2"
    elif click_count == 2:
        button_text = f"üî∏üî∏ {code} (–Ω–∞–∂–º–∏ –µ—â–µ 1 —Ä–∞–∑)"
        callback_data = f"expire_code_{code}_3"
    elif click_count >= 3:
        button_text = f"‚ùå –î–ï–ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨ {code}"
        callback_data = f"confirm_expire_{code}"
    else:
        button_text = f"üî• {code}"
        callback_data = f"expire_code_{code}_1"
    
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=button_text, callback_data=callback_data)],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_expire_code")]
    ])


def get_reset_db_click_keyboard(click_count: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –∫–ª–∏–∫–æ–≤ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–±—Ä–æ—Å–∞ –ë–î (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
    
    if click_count == 1:
        button_text = "üî∏ –°–±—Ä–æ—Å –ë–î (2)"
        callback_data = "reset_click_2"
    elif click_count == 2:
        button_text = "üî∏ –°–±—Ä–æ—Å –ë–î (1)"
        callback_data = "reset_click_3"
    elif click_count >= 3:
        button_text = "üóëÔ∏è –°–ë–†–û–°–ò–¢–¨ –ë–ê–ó–£ –î–ê–ù–ù–´–•"
        callback_data = "confirm_reset_db"
    else:
        button_text = "üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –ë–î"
        callback_data = "reset_click_1"
    
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=button_text, callback_data=callback_data)],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_database")]
    ])


def get_admin_back_keyboard() -> InlineKeyboardMarkup:
    """–ü—Ä–æ—Å—Ç–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥" –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")]
    ])

@router.callback_query(F.data == "view_all_codes")
async def view_all_codes_callback(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑ –≤—Å–µ—Ö –∫–æ–¥–æ–≤ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π"""
    try:
        user_id = callback.from_user.id
        codes = await db.get_active_codes()
        
        if not codes:
            codes_text = """ü§∑‚Äç‚ôÇÔ∏è –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ-–∫–æ–¥–æ–≤ –Ω–µ—Ç

–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–µ –∫–æ–¥—ã!"""
            
            is_subscribed = await UserService.get_user_subscription_status(user_id)
            keyboard = get_subscription_keyboard(is_subscribed)
        else:
            codes_text = f"""üìã –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ-–∫–æ–¥—ã ({len(codes)}):

üí° –ù–∞–∂–º–∏ –Ω–∞ –∫–æ–¥, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–≥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π"""
            
            # –ö–õ–Æ–ß–ï–í–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            checked_codes = user_checked_codes.get(user_id, {})
            inline_keyboard = []
            
            for code in codes:
                if code.is_active:
                    code_val = code.code
                    status = checked_codes.get(code_val, 'unchecked')
                    
                    if status == 'valid':
                        # –ö–æ–¥ –ø—Ä–æ–≤–µ—Ä–µ–Ω –∏ –∞–∫—Ç—É–∞–ª–µ–Ω - URL-–∫–Ω–æ–ø–∫–∞
                        activation_url = f"https://genshin.hoyoverse.com/gift?code={code_val}"
                        inline_keyboard.append([
                            InlineKeyboardButton(
                                text=f"‚úÖ {code_val} (–ø—Ä–æ–≤–µ—Ä–µ–Ω)",
                                url=activation_url
                            )
                        ])
                    elif status == 'expired':
                        # –ö–æ–¥ –∏—Å—Ç–µ–∫ - –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞
                        inline_keyboard.append([
                            InlineKeyboardButton(
                                text=f"‚ùå {code_val} (–∏—Å—Ç–µ–∫)",
                                callback_data="expired_code"
                            )
                        ])
                    else:
                        # –ö–æ–¥ –Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω - –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                        inline_keyboard.append([
                            InlineKeyboardButton(
                                text=f"üéÅ {code_val}",
                                callback_data=f"check_code_{code_val}"
                            )
                        ])
            
            from aiogram.types import InlineKeyboardMarkup
            keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
        
        await callback.message.edit_text(
            codes_text,
            parse_mode="HTML", 
            reply_markup=keyboard
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–¥–æ–≤: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–¥–æ–≤", show_alert=True)
    
    await callback.answer()


# ============================================================================
# –¢–ê–ö–ñ–ï –î–û–ë–ê–í–¨ –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ü–û–î–ü–ò–°–ö–ò (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç)
# ============================================================================

@router.callback_query(F.data == "subscribe")
async def subscribe_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
    try:
        success = await db.subscribe_user(callback.from_user.id)
        
        if success:
            await callback.answer("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!", show_alert=True)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            keyboard = get_subscription_keyboard(True)  # True = –ø–æ–¥–ø–∏—Å–∞–Ω
            await callback.message.edit_reply_markup(reply_markup=keyboard)
        else:
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏", show_alert=True)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏", show_alert=True)


@router.callback_query(F.data == "expired_code")
async def expired_code_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∏—Å—Ç–µ–∫—à–µ–º—É –∫–æ–¥—É"""
    await callback.answer("‚ùå –≠—Ç–æ—Ç –ø—Ä–æ–º–æ-–∫–æ–¥ –±–æ–ª—å—à–µ –Ω–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç. –°–ª–µ–¥–∏ –∑–∞ –Ω–æ–≤—ã–º–∏ –∫–æ–¥–∞–º–∏!", show_alert=True)